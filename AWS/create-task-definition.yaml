AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation creating a task definition"
Resources:
  CodeBoxTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn: "arn:aws:iam::27673333333:role/ecsTaskExecutionRole"
      Cpu: 256
      Memory: 512
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "myawsplanet"
          Image: "27673333333.dkr.ecr.us-east-1.amazonaws.com/codebox"
          MemoryReservation: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 4000
              Protocol: tcp

  CodeBoxECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: codebox-dev
      
  CodeBoxAlb:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: CodeBoxALB
      Subnets:
        - subnet-580b0331
        - subnet-7102210a
        - subnet-c40f7b89
      Type: application
  CodeBoxTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: CodeBoxTargetGroup
      VpcId: vpc-9d55b7f5
      Protocol: HTTP
      Port: 4000
      HealthCheckPath: /actuator/
      TargetType: ip
  CodeBoxListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref CodeBoxTargetGroup
          Type: forward
      LoadBalancerArn: !Ref CodeBoxALB
      Port: 80
      Protocol: HTTP

  CodeBoxAlbSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG for CodeBoxALB
      GroupName: CodeBoxAlbSG
      SecurityGroupIngress:
        - CidrIpv6: ::/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv6 traffic'
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: 'Inbound rule for IPv4 traffic'